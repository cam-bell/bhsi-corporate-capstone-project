import React from "react";
import {
  Box,
  Typography,
  Chip,
  Button,
  ToggleButtonGroup,
  ToggleButton,
  Tooltip,
  useMediaQuery,
} from "@mui/material";
import { Printer, Languages, Bolt, Table } from "lucide-react";
import { useTheme } from "@mui/material/styles";

interface SummaryHeaderProps {
  companyName: string;
  overallRisk: string;
  generatedAt: string;
  method: string;
  language: string;
  onLanguageChange: (lang: string) => void;
  languages: { code: string; label: string }[];
  onPrint: () => void;
}

const riskColorMap: Record<string, "success" | "warning" | "error"> = {
  green: "success",
  orange: "warning",
  red: "error",
};

const SummaryHeader: React.FC<SummaryHeaderProps> = ({
  companyName,
  overallRisk,
  generatedAt,
  method,
  language,
  onLanguageChange,
  languages,
  onPrint,
}) => {
  const theme = useTheme();
  const isMobile = useMediaQuery(theme.breakpoints.down("sm"));
  return (
    <Box
      display="flex"
      flexDirection={isMobile ? "column" : "row"}
      alignItems={isMobile ? "flex-start" : "center"}
      justifyContent="space-between"
      mb={4}
      gap={isMobile ? 2 : 0}
    >
      <Box>
        <Typography
          variant={isMobile ? "h5" : "h4"}
          fontWeight="bold"
          gutterBottom
        >
          {companyName}
        </Typography>
        <Box display="flex" alignItems="center" gap={1}>
          <Chip
            label={overallRisk?.toUpperCase() || "-"}
            color={riskColorMap[overallRisk] || "default"}
            sx={{ fontWeight: 700, fontSize: isMobile ? 14 : 16 }}
          />
          <Tooltip
            title={
              method === "cloud_gemini_analysis"
                ? "Generated by Gemini AI"
                : "Template-based analysis"
            }
          >
            <Chip
              icon={
                method === "cloud_gemini_analysis" ? (
                  <Bolt size={16} />
                ) : (
                  <Table size={16} />
                )
              }
              label={method === "cloud_gemini_analysis" ? "Gemini" : "Template"}
              color={method === "cloud_gemini_analysis" ? "primary" : "default"}
              size="small"
              sx={{ ml: 1 }}
            />
          </Tooltip>
          <Typography variant="body2" color="text.secondary" ml={2}>
            Last analyzed:{" "}
            {generatedAt ? new Date(generatedAt).toLocaleString() : "-"}
          </Typography>
        </Box>
      </Box>
      <Box display="flex" alignItems="center" gap={2}>
        <ToggleButtonGroup
          value={language}
          exclusive
          onChange={(_, val) => val && onLanguageChange(val)}
          size="small"
          sx={{ mr: 2 }}
        >
          {languages.map((lang) => (
            <ToggleButton
              key={lang.code}
              value={lang.code}
              aria-label={lang.label}
            >
              <Languages size={16} style={{ marginRight: 4 }} />
              {lang.label}
            </ToggleButton>
          ))}
        </ToggleButtonGroup>
        <Button
          variant="outlined"
          startIcon={<Printer size={18} />}
          onClick={onPrint}
          sx={{ fontWeight: 600 }}
        >
          Print / Export
        </Button>
      </Box>
    </Box>
  );
};

export default SummaryHeader;
